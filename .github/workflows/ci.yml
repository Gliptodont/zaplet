name: Cross-platform CI & Release

on:
  push:
    branches: [ master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install CMake
        uses: lukka/get-cmake@latest

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgJsonGlob: '**/vcpkg.json'

      - name: Cache vcpkg artifacts
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/vcpkg
            **/buildtrees
            **/downloads
          key: ${{ runner.os }}-vcpkg-${{ hashFiles('**/vcpkg.json') }}
          restore-keys: |
            ${{ runner.os }}-vcpkg-

      - name: Configure project
        run: |
          case "${{ runner.os }}" in
            Linux)  cmake --preset=Release-Linux ;;
            Windows) cmake --preset=Release-Windows ;;
            macOS)  cmake --preset=Release-macOS ;;
          esac
        shell: bash

      - name: Build project
        run: |
          case "${{ runner.os }}" in
            Linux)  cmake --build --preset=Release-Linux --parallel ;;
            Windows) cmake --build --preset=Release-Windows --parallel ;;
            macOS)  cmake --build --preset=Release-macOS --parallel ;;
          esac
        shell: bash

      - name: Run CPack
        run: |
          case "${{ runner.os }}" in
            Linux)  cmake --build --preset=Release-Linux --target package ;;
            Windows) cmake --build --preset=Release-Windows --target package ;;
            macOS)  cmake --build --preset=Release-macOS --target package ;;
          esac
        shell: bash

      - name: Upload CPack artifact
        uses: actions/upload-artifact@v4
        with:
          name: zaplet-${{ runner.os }}
          path: |
            build/release/*.zip
            build/release/*.tar.gz

  release:
    name: Create GitHub Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: |
            artifacts/zaplet-ubuntu-latest/*.tar.gz
            artifacts/zaplet-windows-latest/*.zip
            artifacts/zaplet-macos-latest/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
